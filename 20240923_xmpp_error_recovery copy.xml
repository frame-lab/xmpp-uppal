<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.

// Continuar com o setup de recepção de mensagens. SOMENTE recepção de mensagens no cliente

typedef struct
{
  int from;
  int to;
  int content;
} messageType;

messageType cClientMessage;
messageType cServerMessage;

const int CLIENTNUMBER = 3;
chan toServerChannel[CLIENTNUMBER];
chan toClientChannel[CLIENTNUMBER];

const int IQ = 0;
const int MESSAGE = 1;
const int FIRSTCST = 2;
const int LASTCST = 3;
const int ISH = 4;
const int RSH = 5;
const int ERROR = 6;
const int RESULT = 7;

chan req;
chan rsh[CLIENTNUMBER];
chan ish[CLIENTNUMBER];
chan message[CLIENTNUMBER];
chan presence[CLIENTNUMBER];
chan iq[CLIENTNUMBER];
chan firstCst[CLIENTNUMBER];
chan lastCst[CLIENTNUMBER];
chan error[CLIENTNUMBER];
chan result[CLIENTNUMBER];

bool tcpConnected[CLIENTNUMBER];
bool saslAuthenticated[CLIENTNUMBER];
bool tlsEncrypted[CLIENTNUMBER];
bool streamInitiated[CLIENTNUMBER];

</declaration>
	<template>
		<name>SenderStreamSetup</name>
		<parameter>int id, int receiver</parameter>
		<declaration>clock c;

void setupMessage(int content){
    messageType message = {id, receiver, content};
    cClientMessage = message;
    c = 0;
}</declaration>
		<location id="id0" x="-799" y="17">
		</location>
		<location id="id1" x="-586" y="17">
		</location>
		<location id="id2" x="-280" y="17">
		</location>
		<init ref="id0"/>
		<transition id="id3">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-484" y="0">rsh[receiver]?</label>
			<label kind="assignment" x="-510" y="17">streamInitiated[id]=true</label>
		</transition>
		<transition id="id4">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-782" y="25">req!</label>
			<label kind="assignment" x="-782" y="42">setupMessage(ISH)</label>
			<nail x="-782" y="17"/>
		</transition>
	</template>
	<template>
		<name>ReceiverStreamSetup</name>
		<parameter>int id, int receiver</parameter>
		<declaration>clock c;

void setupMessage(int content){
    messageType message = {id, receiver, content};
    cClientMessage = message;
    c = 0;
}</declaration>
		<location id="id5" x="-374" y="-42">
		</location>
		<location id="id6" x="-204" y="-42">
		</location>
		<location id="id7" x="68" y="-42">
		</location>
		<location id="id8" x="297" y="-42">
		</location>
		<init ref="id5"/>
		<transition id="id9">
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="assignment" x="68" y="-25">streamInitiated[id]=true</label>
		</transition>
		<transition id="id10">
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-102" y="-59">rsh[receiver]?</label>
			<label kind="assignment" x="-178" y="-34">setupMessage(RSH)</label>
		</transition>
		<transition id="id11">
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-340" y="-42">ish[id]?</label>
		</transition>
	</template>
	<template>
		<name>TCPConnectionToServer</name>
		<parameter>int clientId</parameter>
		<location id="id12" x="-340" y="0">
		</location>
		<location id="id13" x="-127" y="0">
			<name x="-178" y="-42">TcpEstablished</name>
		</location>
		<init ref="id12"/>
		<transition id="id14">
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="assignment" x="-331" y="34">tcpConnected[clientId] = true</label>
		</transition>
	</template>
	<template>
		<name>TLSEncryption</name>
		<parameter>int clientId</parameter>
		<location id="id15" x="-391" y="-34">
		</location>
		<location id="id16" x="-187" y="-34">
		</location>
		<location id="id17" x="102" y="-34">
			<name x="92" y="-68">TlsEncrypted</name>
		</location>
		<init ref="id15"/>
		<transition id="id18">
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="assignment" x="-161" y="-25">tlsEncrypted[clientId] = true</label>
		</transition>
		<transition id="id19">
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-374" y="-68">tcpConnected[clientId]</label>
		</transition>
	</template>
	<template>
		<name>SASLAuthenticationToServer</name>
		<parameter>int clientId</parameter>
		<location id="id20" x="-382" y="-8">
		</location>
		<location id="id21" x="-119" y="-8">
		</location>
		<location id="id22" x="195" y="-8">
			<name x="185" y="-42">SaslAuthenticated</name>
		</location>
		<init ref="id20"/>
		<transition id="id23">
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="assignment" x="-101" y="-8">saslAuthenticated[clientId] = true</label>
		</transition>
		<transition id="id24">
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-331" y="-33">tlsEncrypted[clientId]</label>
		</transition>
	</template>
	<template>
		<name>ClientSender</name>
		<parameter>int id, int receiver, int maxErrorWaitTime, int maxLastCstWaitTime</parameter>
		<declaration>clock c;

void setupMessage(int content){
    messageType message = {id, receiver, content};
    cClientMessage = message;
    c = 0;
}</declaration>
		<location id="id25" x="-17" y="-68">
			<name x="-51" y="-51">SendingCST</name>
		</location>
		<location id="id26" x="238" y="34">
		</location>
		<location id="id27" x="-187" y="-323">
			<name x="-153" y="-340">WaitingMessageResponse</name>
		</location>
		<location id="id28" x="238" y="-195">
		</location>
		<location id="id29" x="459" y="-93">
			<name x="476" y="-102">EndOfStream</name>
		</location>
		<location id="id30" x="-578" y="-68">
		</location>
		<location id="id31" x="-187" y="-144">
			<name x="-153" y="-153">SendingMessage</name>
		</location>
		<location id="id32" x="-187" y="9">
			<name x="-170" y="-8">SendingIQ</name>
		</location>
		<location id="id33" x="-187" y="170">
			<name x="-153" y="161">WaitingIQResponse</name>
		</location>
		<branchpoint id="id34" x="-297" y="-68"/>
		<init ref="id30"/>
		<transition id="id35">
			<source ref="id34"/>
			<target ref="id25"/>
			<label kind="probability" x="-161" y="-85">1</label>
		</transition>
		<transition id="id36">
			<source ref="id33"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="-102" y="85">error[id]?</label>
			<nail x="-102" y="93"/>
		</transition>
		<transition id="id37">
			<source ref="id33"/>
			<target ref="id30"/>
			<label kind="guard" x="-527" y="51">c &gt; maxErrorWaitTime</label>
		</transition>
		<transition id="id38">
			<source ref="id33"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="-552" y="170">result[id]?</label>
			<nail x="-238" y="170"/>
			<nail x="-578" y="170"/>
		</transition>
		<transition id="id39">
			<source ref="id27"/>
			<target ref="id30"/>
			<label kind="guard" x="-450" y="-263">c &gt; maxErrorWaitTime</label>
		</transition>
		<transition id="id40">
			<source ref="id27"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="-102" y="-238">error[id]?</label>
			<nail x="-102" y="-229"/>
		</transition>
		<transition id="id41">
			<source ref="id27"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="-561" y="-348">result[id]?</label>
			<nail x="-578" y="-323"/>
		</transition>
		<transition id="id42">
			<source ref="id34"/>
			<target ref="id32"/>
			<label kind="probability" x="-297" y="-51">8</label>
		</transition>
		<transition id="id43">
			<source ref="id34"/>
			<target ref="id31"/>
			<label kind="probability" x="-297" y="-110">8</label>
		</transition>
		<transition id="id44" controllable="false">
			<source ref="id30"/>
			<target ref="id34"/>
		</transition>
		<transition id="id45">
			<source ref="id32"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="-221" y="68">req!</label>
			<label kind="assignment" x="-323" y="51">setupMessage(IQ)</label>
		</transition>
		<transition id="id46">
			<source ref="id31"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-263" y="-212">req!</label>
			<label kind="assignment" x="-306" y="-229">setupMessage(MESSAGE)</label>
		</transition>
		<transition id="id47">
			<source ref="id25"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="85" y="-119">firstCst[id]?</label>
		</transition>
		<transition id="id48">
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="93" y="-8">req!</label>
			<label kind="assignment" x="-8" y="8">setupMessage(FIRSTCST)</label>
		</transition>
		<transition id="id49">
			<source ref="id27"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="59" y="-272">firstCst[id]?</label>
		</transition>
		<transition id="id50">
			<source ref="id26"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="314" y="34">lastCst[id]?</label>
			<nail x="459" y="34"/>
		</transition>
		<transition id="id51">
			<source ref="id26"/>
			<target ref="id29"/>
			<label kind="guard" x="229" y="-93">c &gt; maxLastCstWaitTime</label>
		</transition>
		<transition id="id52">
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="314" y="-178">req!</label>
			<label kind="assignment" x="280" y="-195">setupMessage(LASTCST)</label>
		</transition>
	</template>
	<template>
		<name>ClientReceiver</name>
		<parameter>int id, int receiver, int maxLastCstWaitTime</parameter>
		<declaration>clock c;

void setupMessage(int content){
    messageType message = {id, receiver, content};
    cClientMessage = message;
    c = 0;
}</declaration>
		<location id="id53" x="-697" y="-127">
		</location>
		<location id="id54" x="-892" y="-42">
		</location>
		<location id="id55" x="-535" y="-170">
		</location>
		<location id="id56" x="-535" y="-93">
		</location>
		<location id="id57" x="-340" y="-136">
			<committed/>
		</location>
		<location id="id58" x="-697" y="42">
		</location>
		<location id="id59" x="-535" y="0">
		</location>
		<location id="id60" x="-535" y="76">
		</location>
		<location id="id61" x="-340" y="34">
			<committed/>
		</location>
		<location id="id62" x="-25" y="34">
			<name x="-109" y="50">WaitingLastCst</name>
		</location>
		<location id="id63" x="-255" y="-42">
			<name x="-255" y="-76">SendingLastCST</name>
		</location>
		<location id="id64" x="119" y="-42">
			<name x="145" y="-59">EndOfStream</name>
		</location>
		<branchpoint id="id65" x="-646" y="-127"/>
		<branchpoint id="id66" x="-646" y="42"/>
		<init ref="id54"/>
		<transition id="id67">
			<source ref="id57"/>
			<target ref="id62"/>
			<label kind="synchronisation" x="-221" y="-110">req!</label>
			<label kind="assignment" x="-229" y="-93">setupMessage(FIRSTCST)</label>
		</transition>
		<transition id="id68">
			<source ref="id61"/>
			<target ref="id62"/>
			<label kind="synchronisation" x="-322" y="13">req!</label>
			<label kind="assignment" x="-323" y="34">setupMessage(FIRSTCST)</label>
		</transition>
		<transition id="id69">
			<source ref="id54"/>
			<target ref="id63"/>
			<label kind="synchronisation" x="-858" y="-59">firstCst[id]?</label>
		</transition>
		<transition id="id70">
			<source ref="id61"/>
			<target ref="id63"/>
			<label kind="synchronisation" x="-306" y="0">firstCst[id]?</label>
		</transition>
		<transition id="id71">
			<source ref="id57"/>
			<target ref="id63"/>
			<label kind="synchronisation" x="-314" y="-127">firstCst[id]?</label>
		</transition>
		<transition id="id72">
			<source ref="id54"/>
			<target ref="id53"/>
			<label kind="synchronisation" x="-850" y="-102">iq[id]?</label>
		</transition>
		<transition id="id73">
			<source ref="id54"/>
			<target ref="id58"/>
			<label kind="synchronisation" x="-858" y="8">message[id]?</label>
		</transition>
		<transition id="id74" controllable="false">
			<source ref="id53"/>
			<target ref="id65"/>
		</transition>
		<transition id="id75">
			<source ref="id57"/>
			<target ref="id54"/>
			<nail x="-340" y="-221"/>
			<nail x="-892" y="-221"/>
		</transition>
		<transition id="id76">
			<source ref="id61"/>
			<target ref="id54"/>
			<nail x="-340" y="119"/>
			<nail x="-892" y="119"/>
		</transition>
		<transition id="id77">
			<source ref="id55"/>
			<target ref="id57"/>
			<label kind="synchronisation" x="-501" y="-204">req!</label>
			<label kind="assignment" x="-501" y="-187">setupMessage(ERROR)</label>
		</transition>
		<transition id="id78">
			<source ref="id56"/>
			<target ref="id57"/>
			<label kind="synchronisation" x="-501" y="-102">req!</label>
			<label kind="assignment" x="-501" y="-85">setupMessage(RESULT)</label>
		</transition>
		<transition id="id79">
			<source ref="id65"/>
			<target ref="id56"/>
			<label kind="probability" x="-595" y="-110">4</label>
		</transition>
		<transition id="id80">
			<source ref="id65"/>
			<target ref="id55"/>
			<label kind="probability" x="-596" y="-169">1</label>
		</transition>
		<transition id="id81">
			<source ref="id59"/>
			<target ref="id61"/>
			<label kind="synchronisation" x="-518" y="-34">req!</label>
			<label kind="assignment" x="-518" y="-17">setupMessage(ERROR)</label>
		</transition>
		<transition id="id82">
			<source ref="id60"/>
			<target ref="id61"/>
			<label kind="synchronisation" x="-518" y="68">req!</label>
			<label kind="assignment" x="-518" y="85">setupMessage(RESULT)</label>
		</transition>
		<transition id="id83">
			<source ref="id66"/>
			<target ref="id60"/>
			<label kind="probability" x="-595" y="59">4</label>
		</transition>
		<transition id="id84">
			<source ref="id66"/>
			<target ref="id59"/>
			<label kind="probability" x="-595" y="0">1</label>
		</transition>
		<transition id="id85" controllable="false">
			<source ref="id58"/>
			<target ref="id66"/>
		</transition>
		<transition id="id86">
			<source ref="id62"/>
			<target ref="id64"/>
			<label kind="synchronisation" x="34" y="35">lastCst[id]?</label>
			<nail x="119" y="25"/>
		</transition>
		<transition id="id87">
			<source ref="id62"/>
			<target ref="id64"/>
			<label kind="guard" x="35" y="-8">c &gt; maxLastCstWaitTime</label>
		</transition>
		<transition id="id88">
			<source ref="id63"/>
			<target ref="id64"/>
			<label kind="synchronisation" x="-26" y="-68">req!</label>
			<label kind="assignment" x="-26" y="-85">setupMessage(LASTCST)</label>
		</transition>
	</template>
	<template>
		<name>Server</name>
		<declaration>int cSender, cReceiver;
int cContent = -1;
clock c = 0;

void readMessage(){
    cContent = cClientMessage.content;
    cSender = cClientMessage.from;
    cReceiver = cClientMessage.to;
    c = 0;
}

void sendMessage(){
    messageType message = {cSender, cReceiver, cContent};
    cServerMessage = message;
    cContent = -1;
    c = 0;
}

bool canReadMessage(){
    return cContent == -1;
}

void free(){
    c = 0;
    cContent = -1;
}</declaration>
		<location id="id89" x="-918" y="-340">
		</location>
		<location id="id90" x="-1207" y="-340">
			<urgent/>
		</location>
		<init ref="id90"/>
		<transition id="id91">
			<source ref="id89"/>
			<target ref="id89"/>
			<label kind="guard" x="-900" y="-310">cContent == ERROR</label>
			<label kind="synchronisation" x="-900" y="-293">error[cReceiver]!</label>
			<label kind="assignment" x="-900" y="-276">sendMessage()</label>
			<nail x="-816" y="-212"/>
		</transition>
		<transition id="id92">
			<source ref="id89"/>
			<target ref="id89"/>
			<label kind="guard" x="-807" y="-348">cContent == RESULT</label>
			<label kind="synchronisation" x="-807" y="-331">result[cReceiver]!</label>
			<label kind="assignment" x="-799" y="-314">sendMessage()</label>
			<nail x="-671" y="-348"/>
		</transition>
		<transition id="id93">
			<source ref="id89"/>
			<target ref="id89"/>
			<label kind="guard" x="-893" y="-196">cContent == LASTCST</label>
			<label kind="synchronisation" x="-893" y="-179">lastCst[cReceiver]!</label>
			<label kind="assignment" x="-884" y="-162">sendMessage()</label>
			<nail x="-893" y="-145"/>
		</transition>
		<transition id="id94">
			<source ref="id89"/>
			<target ref="id89"/>
			<label kind="guard" x="-1096" y="-170">cContent == MESSAGE</label>
			<label kind="synchronisation" x="-1105" y="-153">message[cReceiver]!</label>
			<label kind="assignment" x="-1071" y="-137">sendMessage()</label>
			<nail x="-1054" y="-170"/>
		</transition>
		<transition id="id95">
			<source ref="id89"/>
			<target ref="id89"/>
			<label kind="guard" x="-689" y="-289">cContent == FIRSTCST</label>
			<label kind="synchronisation" x="-672" y="-264">firstCst[cReceiver]!</label>
			<label kind="assignment" x="-655" y="-238">sendMessage()</label>
			<nail x="-655" y="-221"/>
		</transition>
		<transition id="id96">
			<source ref="id89"/>
			<target ref="id89"/>
			<label kind="guard" x="-799" y="-442">cContent == IQ</label>
			<label kind="synchronisation" x="-791" y="-425">iq[cReceiver]!</label>
			<label kind="assignment" x="-782" y="-408">sendMessage()</label>
			<nail x="-765" y="-408"/>
		</transition>
		<transition id="id97">
			<source ref="id89"/>
			<target ref="id89"/>
			<label kind="guard" x="-1020" y="-536">cContent == RSH</label>
			<label kind="synchronisation" x="-1012" y="-519">rsh[cReceiver]!</label>
			<label kind="assignment" x="-952" y="-502">sendMessage()</label>
			<nail x="-969" y="-502"/>
		</transition>
		<transition id="id98">
			<source ref="id89"/>
			<target ref="id89"/>
			<label kind="guard" x="-1224" y="-459">cContent == ISH</label>
			<label kind="synchronisation" x="-1224" y="-442">ish[cReceiver]!</label>
			<label kind="assignment" x="-1216" y="-425">sendMessage()</label>
			<nail x="-1131" y="-425"/>
			<nail x="-1114" y="-416"/>
		</transition>
		<transition id="id99">
			<source ref="id89"/>
			<target ref="id90"/>
			<label kind="guard" x="-1123" y="-387">c &gt;= 29</label>
			<label kind="assignment" x="-1105" y="-365">free()</label>
			<nail x="-1097" y="-370"/>
		</transition>
		<transition id="id100">
			<source ref="id90"/>
			<target ref="id89"/>
			<label kind="guard" x="-1198" y="-314">canReadMessage()</label>
			<label kind="synchronisation" x="-1130" y="-297">req?</label>
			<label kind="assignment" x="-1173" y="-280">readMessage()</label>
			<nail x="-1079" y="-323"/>
		</transition>
	</template>
	<system>Server1 = Server();

ClientSender1 = ClientSender(0,3,30);
ClientReceiver1 = ClientReceiver(1,0,30);
ClientReceiver2 = ClientReceiver(2,0,30);
TLSEncryption1 = TLSEncryption(0);
TLSEncryption2 = TLSEncryption(1);
SASLAuthenticationToServer1 = SASLAuthenticationToServer(0);
SASLAuthenticationToServer2 = SASLAuthenticationToServer(1);
TCPConnectionToServer1= TCPConnectionToServer(0);
TCPConnectionToServer2 = TCPConnectionToServer(1);
// List one or more processes to be composed into a system.
system Server1, ClientSender1, ClientReceiver1;//, TCPConnectionToServer1, TCPConnectionToServer2, TLSEncryption1, TLSEncryption2, SASLAuthenticationToServer1, SASLAuthenticationToServer2;
</system>
	<queries>
		<option key="--search-order" value="1"/>
		<query>
			<formula>E&lt;&gt;ClientSender1.EndOfStream</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-09-30 18:59:29 -0300">
				<option key="--search-order" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;ClientReceiver1.EndOfStream</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-09-30 18:59:32 -0300">
				<option key="--search-order" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;ClientReceiver1.EndOfStream &amp;&amp; ClientSender1.EndOfStream</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-09-30 18:59:31 -0300">
				<option key="--search-order" value="1"/>
			</result>
		</query>
		<query>
			<formula>A&lt;&gt;ClientSender1.EndOfStream &amp;&amp; ClientReceiver1.EndOfStream</formula>
			<comment/>
			<result outcome="failure" type="quality" timestamp="2024-09-30 18:59:33 -0300">
				<option key="--search-order" value="1"/>
			</result>
		</query>
	</queries>
</nta>
