<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// Place global declarations here.

// Continuar com o setup de recepção de mensagens. SOMENTE recepção de mensagens no cliente

typedef struct
{
  int from;
  int to;
  int content;
} messageType;

messageType cClientMessage;
messageType cServerMessage;

const int CLIENTNUMBER = 2;
chan toServerChannel[CLIENTNUMBER];
chan toClientChannel[CLIENTNUMBER];

const int IQ = 0;
const int MESSAGE = 1;
const int FIRSTCST = 2;
const int LASTCST = 3;
const int ISH = 4;
const int RSH = 5;

chan req;
chan rsh[CLIENTNUMBER];
chan ish[CLIENTNUMBER];
chan message[CLIENTNUMBER];
chan presence[CLIENTNUMBER];
chan iq[CLIENTNUMBER];
chan firstCst[CLIENTNUMBER];
chan lastCst[CLIENTNUMBER];
chan error[CLIENTNUMBER];

bool tcpConnected[CLIENTNUMBER];
bool saslAuthenticated[CLIENTNUMBER];
bool tlsEncrypted[CLIENTNUMBER];
bool streamInitiated[CLIENTNUMBER];

</declaration>
	<template>
		<name>SenderStreamSetup</name>
		<parameter>int id, int receiver</parameter>
		<declaration>clock c;

void setupMessage(int from, int to, int content){
    messageType message = {from, to, content};
    cClientMessage = message;
    c = 0;
}</declaration>
		<location id="id0" x="-799" y="17">
		</location>
		<location id="id1" x="-586" y="17">
		</location>
		<location id="id2" x="-280" y="17">
		</location>
		<init ref="id0"/>
		<transition id="id3">
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-484" y="0">rsh[receiver]?</label>
			<label kind="assignment" x="-510" y="17">streamInitiated[id]=true</label>
		</transition>
		<transition id="id4">
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-782" y="25">req!</label>
			<label kind="assignment" x="-782" y="42">setupMessage(id, receiver, ISH)</label>
		</transition>
	</template>
	<template>
		<name>ReceiverStreamSetup</name>
		<parameter>int id, int receiver</parameter>
		<declaration>clock c;

void setupMessage(int from, int to, int content){
    messageType message = {from, to, content};
    cClientMessage = message;
    c = 0;
}</declaration>
		<location id="id5" x="-417" y="-42">
		</location>
		<location id="id6" x="-204" y="-42">
		</location>
		<location id="id7" x="102" y="-42">
		</location>
		<location id="id8" x="221" y="-42">
		</location>
		<init ref="id5"/>
		<transition id="id9">
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="assignment" x="120" y="-42">streamInitiated[id]=true</label>
		</transition>
		<transition id="id10">
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-102" y="-59">rsh[receiver]?</label>
			<label kind="assignment" x="-178" y="-34">setupMessage(id, receiver, RSH)</label>
		</transition>
		<transition id="id11">
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-400" y="-34">ish[id]?</label>
		</transition>
	</template>
	<template>
		<name>TCPConnectionToServer</name>
		<parameter>int clientId</parameter>
		<location id="id12" x="-340" y="0">
		</location>
		<location id="id13" x="-127" y="0">
			<name x="-178" y="-42">TcpEstablished</name>
		</location>
		<init ref="id12"/>
		<transition id="id14">
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="assignment" x="-331" y="34">tcpConnected[clientId] = true</label>
		</transition>
	</template>
	<template>
		<name>TLSEncryption</name>
		<parameter>int clientId</parameter>
		<location id="id15" x="-391" y="-34">
		</location>
		<location id="id16" x="-187" y="-34">
		</location>
		<location id="id17" x="102" y="-34">
			<name x="92" y="-68">TlsEncrypted</name>
		</location>
		<init ref="id15"/>
		<transition id="id18">
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="assignment" x="-161" y="-25">tlsEncrypted[clientId] = true</label>
		</transition>
		<transition id="id19">
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-374" y="-68">tcpConnected[clientId]</label>
		</transition>
	</template>
	<template>
		<name>SASLAuthenticationToServer</name>
		<parameter>int clientId</parameter>
		<location id="id20" x="-382" y="-8">
		</location>
		<location id="id21" x="-119" y="-8">
		</location>
		<location id="id22" x="195" y="-8">
			<name x="185" y="-42">SaslAuthenticated</name>
		</location>
		<init ref="id20"/>
		<transition id="id23">
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="assignment" x="-101" y="-8">saslAuthenticated[clientId] = true</label>
		</transition>
		<transition id="id24">
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-331" y="-33">tlsEncrypted[clientId]</label>
		</transition>
	</template>
	<template>
		<name>ClientSender</name>
		<parameter>int id, int receiver</parameter>
		<declaration>clock c;

void setupMessage(int from, int to, int content){
    messageType message = {from, to, content};
    cClientMessage = message;
    c = 0;
}</declaration>
		<location id="id25" x="-187" y="-34">
			<name x="-221" y="-17">SendingMessages</name>
		</location>
		<location id="id26" x="187" y="-34">
		</location>
		<location id="id27" x="-187" y="-179">
			<name x="-197" y="-213">ReceivingMessages</name>
		</location>
		<location id="id28" x="170" y="-85">
		</location>
		<location id="id29" x="331" y="-85">
			<name x="357" y="-102">EndOfStream</name>
			<committed/>
		</location>
		<location id="id30" x="-577" y="-34">
		</location>
		<init ref="id30"/>
		<transition id="id31">
			<source ref="id30"/>
			<target ref="id25"/>
		</transition>
		<transition id="id32">
			<source ref="id27"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-272" y="-111">iq[id]?</label>
			<nail x="-213" y="-102"/>
		</transition>
		<transition id="id33">
			<source ref="id25"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-153" y="-119">req!</label>
			<label kind="assignment" x="-162" y="-102">setupMessage(id, receiver, IQ)</label>
			<nail x="-170" y="-102"/>
		</transition>
		<transition id="id34">
			<source ref="id25"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="50" y="-68">firstCst[id]?</label>
		</transition>
		<transition id="id35">
			<source ref="id25"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="-26" y="-51">req!</label>
			<label kind="assignment" x="-119" y="-34">setupMessage(id, receiver, FIRSTCST)</label>
		</transition>
		<transition id="id36">
			<source ref="id27"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="42" y="-145">firstCst[id]?</label>
		</transition>
		<transition id="id37">
			<source ref="id26"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="246" y="-8">lastCst[id]?</label>
			<nail x="297" y="-17"/>
		</transition>
		<transition id="id38">
			<source ref="id26"/>
			<target ref="id29"/>
			<label kind="guard" x="237" y="-52">c &gt; 30</label>
		</transition>
		<transition id="id39">
			<source ref="id25"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-195" y="34">req!</label>
			<label kind="assignment" x="-263" y="51">setupMessage(id, receiver, MESSAGE)</label>
			<nail x="-153" y="33"/>
			<nail x="-221" y="33"/>
		</transition>
		<transition id="id40">
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="186" y="-111">req!</label>
			<label kind="assignment" x="186" y="-128">setupMessage(id, receiver, LASTCST)</label>
		</transition>
	</template>
	<template>
		<name>ClientReceiver</name>
		<parameter>int id, int receiver</parameter>
		<declaration>clock c;

void setupMessage(int from, int to, int content){
    messageType message = {from, to, content};
    cClientMessage = message;
    c = 0;
}</declaration>
		<location id="id41" x="-433" y="102">
			<name x="-467" y="119">SendingMessages</name>
		</location>
		<location id="id42" x="-59" y="102">
		</location>
		<location id="id43" x="-433" y="-43">
			<name x="-443" y="-77">ReceivingMessages</name>
		</location>
		<location id="id44" x="-76" y="51">
		</location>
		<location id="id45" x="85" y="51">
			<name x="111" y="34">EndOfStream</name>
			<committed/>
		</location>
		<location id="id46" x="-850" y="-42">
		</location>
		<init ref="id46"/>
		<transition id="id47">
			<source ref="id46"/>
			<target ref="id43"/>
		</transition>
		<transition id="id48">
			<source ref="id41"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-501" y="9">req!</label>
			<label kind="assignment" x="-705" y="26">setupMessage(id, receiver, IQ)</label>
			<nail x="-459" y="34"/>
		</transition>
		<transition id="id49">
			<source ref="id43"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="-408" y="26">iq[id]?</label>
			<nail x="-408" y="34"/>
		</transition>
		<transition id="id50">
			<source ref="id41"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="-297" y="43">firstCst[id]?</label>
		</transition>
		<transition id="id51">
			<source ref="id41"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="-272" y="85">req!</label>
			<label kind="assignment" x="-365" y="102">setupMessage(id, receiver, FIRSTCST)</label>
		</transition>
		<transition id="id52">
			<source ref="id43"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="-306" y="-25">firstCst[id]?</label>
		</transition>
		<transition id="id53">
			<source ref="id42"/>
			<target ref="id45"/>
			<label kind="synchronisation" x="0" y="128">lastCst[id]?</label>
			<nail x="51" y="119"/>
		</transition>
		<transition id="id54">
			<source ref="id42"/>
			<target ref="id45"/>
			<label kind="guard" x="-17" y="85">c &gt; 30</label>
		</transition>
		<transition id="id55">
			<source ref="id43"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-510" y="-137">message[id]?</label>
			<nail x="-501" y="-111"/>
			<nail x="-433" y="-111"/>
		</transition>
		<transition id="id56">
			<source ref="id44"/>
			<target ref="id45"/>
			<label kind="synchronisation" x="-34" y="26">req!</label>
			<label kind="assignment" x="-127" y="9">setupMessage(id, receiver, LASTCST)</label>
		</transition>
	</template>
	<template>
		<name>Server</name>
		<declaration>int cSender, cReceiver;
int cContent = -1;

void readMessage(){
    cContent = cClientMessage.content;
    cSender = cClientMessage.from;
    cReceiver = cClientMessage.to;
}

void sendMessage(){
    messageType message = {cSender, cReceiver, cContent};
    cServerMessage = message;
    cContent = -1;
}

bool canReadMessage(){
    return cContent == -1;
}</declaration>
		<location id="id57" x="-918" y="-340">
			<committed/>
		</location>
		<location id="id58" x="-1207" y="-340">
		</location>
		<init ref="id58"/>
		<transition id="id59">
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="guard" x="-893" y="-196">cContent == LASTCST</label>
			<label kind="synchronisation" x="-893" y="-179">lastCst[cReceiver]!</label>
			<label kind="assignment" x="-884" y="-162">sendMessage()</label>
			<nail x="-893" y="-145"/>
		</transition>
		<transition id="id60">
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="guard" x="-1096" y="-170">cContent == MESSAGE</label>
			<label kind="synchronisation" x="-1105" y="-153">message[cReceiver]!</label>
			<label kind="assignment" x="-1071" y="-137">sendMessage()</label>
			<nail x="-1054" y="-170"/>
		</transition>
		<transition id="id61">
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="guard" x="-689" y="-289">cContent == FIRSTCST</label>
			<label kind="synchronisation" x="-672" y="-264">firstCst[cReceiver]!</label>
			<label kind="assignment" x="-655" y="-238">sendMessage()</label>
			<nail x="-655" y="-221"/>
		</transition>
		<transition id="id62">
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="guard" x="-799" y="-442">cContent == IQ</label>
			<label kind="synchronisation" x="-791" y="-425">iq[cReceiver]!</label>
			<label kind="assignment" x="-782" y="-408">sendMessage()</label>
			<nail x="-765" y="-408"/>
		</transition>
		<transition id="id63">
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="guard" x="-1020" y="-536">cContent == RSH</label>
			<label kind="synchronisation" x="-1012" y="-519">rsh[cReceiver]!</label>
			<label kind="assignment" x="-952" y="-502">sendMessage()</label>
			<nail x="-969" y="-502"/>
		</transition>
		<transition id="id64">
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="guard" x="-1224" y="-459">cContent == ISH</label>
			<label kind="synchronisation" x="-1224" y="-442">ish[cReceiver]!</label>
			<label kind="assignment" x="-1216" y="-425">sendMessage()</label>
			<nail x="-1131" y="-425"/>
			<nail x="-1114" y="-416"/>
		</transition>
		<transition id="id65">
			<source ref="id57"/>
			<target ref="id58"/>
			<label kind="guard" x="-1189" y="-374">canReadMessage()</label>
		</transition>
		<transition id="id66">
			<source ref="id58"/>
			<target ref="id57"/>
			<label kind="guard" x="-1182" y="-332">canReadMessage()</label>
			<label kind="synchronisation" x="-1131" y="-315">req?</label>
			<label kind="assignment" x="-1165" y="-298">readMessage()</label>
		</transition>
	</template>
	<system>Server1 = Server();

ClientSender1 = ClientSender(0,1);
ClientReceiver1 = ClientReceiver(1,0);
TLSEncryption1 = TLSEncryption(0);
TLSEncryption2 = TLSEncryption(1);
SASLAuthenticationToServer1 = SASLAuthenticationToServer(0);
SASLAuthenticationToServer2 = SASLAuthenticationToServer(1);
TCPConnectionToServer1= TCPConnectionToServer(0);
TCPConnectionToServer2 = TCPConnectionToServer(1);
// List one or more processes to be composed into a system.
system Server1, ClientSender1, ClientReceiver1;//, TCPConnectionToServer1, TCPConnectionToServer2, TLSEncryption1, TLSEncryption2, SASLAuthenticationToServer1, SASLAuthenticationToServer2;
</system>
	<queries>
		<option key="--search-order" value="1"/>
		<query>
			<formula>E&lt;&gt;ClientSender1.EndOfStream</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-09-23 20:30:11 -0300">
				<option key="--search-order" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;ClientReceiver1.EndOfStream</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-09-23 20:30:14 -0300">
				<option key="--search-order" value="1"/>
			</result>
		</query>
		<query>
			<formula>E&lt;&gt;ClientReceiver1.EndOfStream &amp;&amp; ClientSender1.EndOfStream</formula>
			<comment/>
			<result outcome="success" type="quality" timestamp="2024-09-23 20:30:16 -0300">
				<option key="--search-order" value="1"/>
			</result>
		</query>
		<query>
			<formula>A&lt;&gt;ClientSender1.EndOfStream &amp;&amp; ClientReceiver1.EndOfStream</formula>
			<comment/>
			<result outcome="failure" type="quality" timestamp="2024-09-23 20:30:18 -0300">
				<option key="--search-order" value="1"/>
			</result>
		</query>
	</queries>
</nta>
