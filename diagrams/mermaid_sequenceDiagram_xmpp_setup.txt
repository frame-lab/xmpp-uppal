%%{
init:{
"theme": "base",
"themeVariables": {
"primaryColor": "#e8b07b",
"primaryTextColor": "#000",
"primaryBorderColor": "#000",
"lineColor": "#000",
"secondaryColor": "#000",
"tertiaryColor": "#fff",
"background": "#FFFF"
}
}
}%%

sequenceDiagram
    participant Client1 as XMPP Initiating Entity
    participant Server as XMPP Server
    participant Client2 as XMPP Receiving Entity

    Note right of Client1: Determines connection port (DNS)
    Client1->>Server: Opens a TCP connection
    Note left of Server: If fails, sends TCP error

    Client1->>Server: Negotiates TLS for channel encryption
    Client1->>Server: Authenticates using SASL
    Server->>Client1: Provides stream resources & session
    Server->>Client1: Sends stream features (e.g., TLS, SASL support)
   
   Note left of Client2: Determines connection port (DNS)
    Client2->>Server: Opens a TCP connection
    Note right of Server: If fails, sends TCP error

    Client2->>Server: Negotiates TLS for channel encryption
    Client2->>Server: Authenticates using SASL
    Server->>Client2: Provides stream resources & session
    Server->>Client2: Sends stream features (e.g., TLS, SASL support)

    
    Note over Client1, Client2: Both clients are now online and authenticated


    %% Handshake Process for Client 1

    Client1->>Server: Sends opening Initial Stream Header
    Server->>Client2: Sends opening Initial Stream Header
    Client2->>Server: Responds with its own Closing Stream Header
    Server->>Client1: Sends Closing Stream Header
    Note left of Server: If fails, sends stream error